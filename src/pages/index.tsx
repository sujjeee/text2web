import { useState } from 'react'
import Head from 'next/head'
import SearchBox from '@/components/SearchBox'
import Hero from '@/components/Hero'
import Script from 'next/script'
import MacWarp from '@/components/MacWarp'
import Footer from '@/components/Footer'
import Frame from '@/components/Frame'
import { sampleHtml, sampleCss, sampleJs } from '@/data'
import { toast, Toaster } from 'react-hot-toast';
import ClockLoader from "react-spinners/ClockLoader";


export default function Home() {

  const [html, setHtml] = useState(sampleHtml)
  const [css, setCss] = useState(sampleCss)
  const [js, setJs] = useState(sampleJs)
  const [showLoading, setShowLoading] = useState(false);

  const generateWeb = async (inputValue: string) => {

    const prompt = `According to this description -> ${inputValue}, Generate HTML, CSS and JavaScript website code. Please make sure to use '$$$' to separate the HTML code, CSS code, and JS code. Therefore response should be in the following pattern: "{contains html elements code} $$$ { contains css style code} $$$ {contains javascript code}"`

    setShowLoading(true);
    const response = await fetch("/api/generate", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        prompt
      }),
    });

    if (!response.ok) {
      setShowLoading(false)
      const errorResponse = await response.json();
      const errorMessage = errorResponse.error;
      toast.error(errorMessage)
    } else {
      const responseText = await response.text();
      const responseObject = JSON.parse(responseText);
      const parts = responseObject.data.split('$$$');

      const htmlPart = parts[0];
      const cssPart = parts[1];
      const jsPart = parts[2];

      setHtml(htmlPart);
      setCss(cssPart);
      setJs(jsPart);
      setShowLoading(false)
      toast.success("build successfully!")
      localStorage.setItem('html', htmlPart);
      localStorage.setItem('css', cssPart);
      localStorage.setItem('js', jsPart);
    }
  }

  const override = {
    display: "block",
    margin: "0 auto",
    borderColor: "black",
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Toaster />
      <main className=" relative flex justify-center items-center w-full flex-col">
        <Hero />
        <SearchBox onButtonClick={generateWeb} />
        <MacWarp child={
          showLoading
            ? (<div className="w-full py-28">
              <ClockLoader
                color="#333333"
                loading={showLoading}
                cssOverride={override}
                size={150}
                aria-label="Loading Spinner"
                data-testid="loader"
              />
              <p className="text-gray-500 text-center pt-10 max-w-xs mx-auto">It will take 5 - 10 seconds to build <br />your website.</p>
            </div>)
            : <Frame html={html} css={css} js={js} />
        } />
        <Footer />
      </main>
      <Script
        src="https://cpwebassets.codepen.io/assets/embed/ei.js"
        strategy="lazyOnload"
      />
    </>
  )
}
